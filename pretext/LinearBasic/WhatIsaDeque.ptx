<?xml version="1.0" ?><section xml:id="linear-basic_what-is-a-deque">
        <title>What Is a Deque?</title>
        <p><idx>deque</idx>A <term>deque</term>, also known as a double-ended queue, is an ordered
            collection of items similar to the queue. It has two ends, a front and a
            rear, and the items remain positioned in the collection. What makes a
            deque different is the unrestrictive nature of adding and removing
            items. New items can be added at either the front or the rear. Likewise,
            existing items can be removed from either end. In a sense, this hybrid
            linear structure provides all the capabilities of stacks and queues in a
            single data structure. <xref ref="fig-basicdeque"/> shows a deque of Python
            data objects.</p>
        <p>It is important to note that even though the deque can assume many of
            the characteristics of stacks and queues, it does not require the LIFO
            and FIFO orderings that are enforced by those data structures. It is up
            to you to make consistent use of the addition and removal operations.</p>
        
        <figure align="center" xml:id="fig-basicdeque"><caption xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">Figure 1: A Deque of Python Data Objects</caption>
        <image source="LinearBasic/basicdeque.png" width="50%"> 
            <description>
                <p>
                    The image illustrates a deque (double-ended queue) of Python data objects. 
                    The deque is represented as a horizontal line with items &quot;dog&quot;, &quot;cat&quot;, and &quot;True&quot; arranged from rear to front. 
                    Arrows indicate the flexibility of the deque, showing that items can be added or removed from both the rear and the front. 
                    Arrows labeled &quot;add to rear&quot; and &quot;remove from rear&quot; point to the rear, while arrows labeled &quot;add to front&quot; and &quot;remove from front&quot; point to the front. 
                    This demonstrates the hybrid behavior of the deque, allowing for operations at both ends without adhering strictly to LIFO or FIFO order.
                </p>
            </description>
        </image></figure>
        <p>
            <!-- extra space before the progress bar -->
        </p>
    </section>
